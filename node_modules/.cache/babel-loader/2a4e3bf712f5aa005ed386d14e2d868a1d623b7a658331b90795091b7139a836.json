{"ast":null,"code":"var _jsxFileName = \"/Users/giovannygarcia/Documents/GitHub/SoloProject-GetItDone/src/components/TodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoForm({\n  onAddTodo\n}) {\n  _s();\n  const [newTodo, setNewTodo] = useState('');\n  const handleAdd = async e => {\n    e.preventDefault();\n    if (!newTodo.trim()) {\n      // Prevent adding empty todos\n      return;\n    }\n    onAddTodo(newTodo); // Call the passed in function to add the todo\n    setNewTodo(''); // Clear the input after adding a todo\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-form\",\n    onSubmit: handleAdd,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"newTodo\",\n      placeholder: \"... needs to be done\",\n      value: newTodo,\n      onChange: e => setNewTodo(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoForm, \"pTGhIS2rvFqJ3N696KH6pV6+hcU=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoForm","onAddTodo","_s","newTodo","setNewTodo","handleAdd","e","preventDefault","trim","className","onSubmit","children","type","name","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/giovannygarcia/Documents/GitHub/SoloProject-GetItDone/src/components/TodoForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction TodoForm({ onAddTodo }) {\n  const [newTodo, setNewTodo] = useState('');\n\n  const handleAdd = async (e) => {\n    e.preventDefault();\n    if (!newTodo.trim()) {\n      // Prevent adding empty todos\n      return;\n    }\n    onAddTodo(newTodo); // Call the passed in function to add the todo\n    setNewTodo(''); // Clear the input after adding a todo\n  };\n\n  return (\n    <form className='todo-form' onSubmit={handleAdd}>\n      <input\n        type='text'\n        name='newTodo'\n        placeholder='... needs to be done'\n        value={newTodo}\n        onChange={(e) => setNewTodo(e.target.value)}\n      />\n      <button type='submit'>Add</button>\n    </form>\n  );\n}\n\nexport default TodoForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMQ,SAAS,GAAG,MAAOC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACJ,OAAO,CAACK,IAAI,CAAC,CAAC,EAAE;MACnB;MACA;IACF;IACAP,SAAS,CAACE,OAAO,CAAC,CAAC,CAAC;IACpBC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;EAClB,CAAC;EAED,oBACEL,OAAA;IAAMU,SAAS,EAAC,WAAW;IAACC,QAAQ,EAAEL,SAAU;IAAAM,QAAA,gBAC9CZ,OAAA;MACEa,IAAI,EAAC,MAAM;MACXC,IAAI,EAAC,SAAS;MACdC,WAAW,EAAC,sBAAsB;MAClCC,KAAK,EAAEZ,OAAQ;MACfa,QAAQ,EAAGV,CAAC,IAAKF,UAAU,CAACE,CAAC,CAACW,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFtB,OAAA;MAAQa,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAG;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEX;AAACnB,EAAA,CAzBQF,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AA2BjB,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}