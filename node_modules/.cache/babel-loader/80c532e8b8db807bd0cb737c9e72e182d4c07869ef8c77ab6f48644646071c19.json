{"ast":null,"code":"var _jsxFileName = \"/Users/giovannygarcia/my-project/solo/src/components/Todo/TodoForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoForm() {\n  _s();\n  const [task, setTask] = useState('');\n\n  //Function for adding tasks\n  const handleAdd = async e => {\n    e.preventDefault(); //Will prevent default form submission behavior\n    try {\n      const response = await fetch('http://localhost:3001/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          task: task\n        }) //Send the task in the request body\n      });\n      if (response.ok) {\n        const result = await response.json();\n        console.log(result);\n        setTask(''); //clear the task after successful addition\n      } else {\n        throw new Error('Network response was not ok'); //Handle http errors\n      }\n    } catch (error) {\n      console.log(error); //Handle network errors\n    }\n  };\n\n  //Handle edit function\n  const handleEdit = id => {\n    //log current todos to inspect them\n    console.log('Current todos:', todos);\n    //find todo item by id\n    const todo = todos.find(item => item.id === id);\n    if (!todo) {\n      console.log('Todo item not found');\n      return;\n    }\n\n    //Toggle the 'done' status\n    const updatedTodo = {\n      ...todo,\n      done: !todo.done\n    };\n\n    //send the updated todo item to the server\n    fetch(`http://localhost:3001/update/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updatedTodo)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(updatedItem => {\n      // Update the state with the new todo list\n      setTodos(todos.map(item => item.id === id ? updatedItem : item));\n    }).catch(err => console.log(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-form\",\n    onSubmit: handleAdd,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"TodoItem\",\n      placeholder: \"... needs to be done\",\n      onChange: e => setTask(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoForm, \"cJE39Iugkv77Am2GUaY068Dantw=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","TodoForm","_s","task","setTask","handleAdd","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","result","json","console","log","Error","error","handleEdit","id","todos","todo","find","item","updatedTodo","done","then","updatedItem","setTodos","map","catch","err","className","onSubmit","children","type","name","placeholder","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/giovannygarcia/my-project/solo/src/components/Todo/TodoForm.js"],"sourcesContent":["import { useState } from \"react\";\n\nfunction TodoForm() {\n  const [task, setTask] = useState('')\n\n  //Function for adding tasks\n  const handleAdd = async (e) => {\n    e.preventDefault(); //Will prevent default form submission behavior\n    try {\n      const response = await fetch('http://localhost:3001/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({task: task}), //Send the task in the request body\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        console.log(result);\n        setTask('') //clear the task after successful addition\n      } else {\n        throw new Error('Network response was not ok'); //Handle http errors\n      }\n    } catch (error) {\n      console.log(error); //Handle network errors\n\n    }\n  }\n\n   //Handle edit function\n   const handleEdit = (id) => {\n    //log current todos to inspect them\n    console.log('Current todos:', todos);\n    //find todo item by id\n    const todo = todos.find((item) => item.id === id);\n    if (!todo) {\n      console.log('Todo item not found');\n      return;\n    }\n\n    //Toggle the 'done' status\n    const updatedTodo = {...todo, done: !todo.done };\n\n    //send the updated todo item to the server\n    fetch(`http://localhost:3001/update/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(updatedTodo),\n    })\n    .then(response => {\n      if(!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then(updatedItem => {\n      // Update the state with the new todo list\n      setTodos(todos.map((item) => item.id === id ? updatedItem : item));\n    })\n    .catch(err => console.log(err));\n  }\n\n\n  return (\n    <form className='todo-form' onSubmit={handleAdd}>\n      <input type='text'\n        name='TodoItem'\n        placeholder='... needs to be done'\n        onChange={(e) => setTask(e.target.value)}\n      />\n      <button type='submit'>Add</button>\n    </form>\n  );\n}\n\nexport default TodoForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}