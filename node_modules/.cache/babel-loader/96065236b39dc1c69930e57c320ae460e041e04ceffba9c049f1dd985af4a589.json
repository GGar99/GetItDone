{"ast":null,"code":"var _jsxFileName = \"/Users/giovannygarcia/my-project/solo/src/components/TodoApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport TodoList from './TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoApp() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    // Fetch todos from the backend\n    fetch('http://localhost:3001/get').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      const formattedTodos = data.map(todo => ({\n        ...todo,\n        id: todo._id.$oid\n      }));\n      setTodos(formattedTodos);\n    }).catch(err => console.error(err));\n  }, []);\n  const addTodo = async newTodoText => {\n    e.preventDefault(); //Will prevent default form submission behavior\n    try {\n      const response = await fetch('http://localhost:3001/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          todo: newTodoText\n        }) //Send the task in the request body\n      });\n      if (response.ok) {\n        const addedTodo = await response.json();\n        console.log(addedTodo);\n        setTodos([...todos, {\n          ...addedTodo,\n          id: addedTodo._id.$oid\n        }]); // Add the new todo with formatted ID to the state\n      } else {\n        throw new Error('Network response was not ok'); //Handle http errors\n      }\n    } catch (error) {\n      console.log(error); //Handle network errors\n    }\n  };\n  const editTodo = (id, doneStatus) => {\n    //log current todos to inspect them\n    console.log('Current todos:', todos);\n    //find todo item by id\n    const todo = todos.find(item => item.id === id);\n    if (!todo) {\n      console.log('Todo item not found');\n      return;\n    }\n\n    //Toggle the 'done' status\n    const updatedTodo = {\n      ...todo,\n      done: !todo.done\n    };\n\n    //send the updated todo item to the server\n    fetch(`http://localhost:3001/update/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updatedTodo)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(updatedItem => {\n      // Update the state with the new todo list\n      setTodos(todos.map(item => item.id === id ? updatedItem : item));\n    }).catch(err => console.log(err));\n  };\n\n  //Handle delete logic\n  const deleteTodo = async id => {\n    try {\n      const response = await fetch(`http://localhost:3001/delete/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        setTodos(todos.filter(todo => todo.id !== id)); // Remove the todo from the state\n      } else {\n        throw new Error('Network response was not ok');\n      }\n    } catch (error) {\n      console.error(error); // Handle network errors\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n      onAddTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      onEditTodo: editTodo,\n      onDeleteTodo: deleteTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoApp, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n_c = TodoApp;\nexport default TodoApp;\nvar _c;\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["React","useState","useEffect","TodoForm","TodoList","jsxDEV","_jsxDEV","TodoApp","_s","todos","setTodos","fetch","then","response","ok","Error","json","data","formattedTodos","map","todo","id","_id","$oid","catch","err","console","error","addTodo","newTodoText","e","preventDefault","method","headers","body","JSON","stringify","addedTodo","log","editTodo","doneStatus","find","item","updatedTodo","done","updatedItem","deleteTodo","filter","children","onAddTodo","fileName","_jsxFileName","lineNumber","columnNumber","onEditTodo","onDeleteTodo","_c","$RefreshReg$"],"sources":["/Users/giovannygarcia/my-project/solo/src/components/TodoApp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TodoForm from './TodoForm';\nimport TodoList from './TodoList';\n\nfunction TodoApp() {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    // Fetch todos from the backend\n    fetch('http://localhost:3001/get')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        const formattedTodos = data.map(todo => ({\n          ...todo,\n          id: todo._id.$oid\n        }));\n        setTodos(formattedTodos);\n      })\n      .catch(err => console.error(err));\n  }, []);\n\n  const addTodo = async (newTodoText) => {\n    e.preventDefault(); //Will prevent default form submission behavior\n    try {\n      const response = await fetch('http://localhost:3001/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({todo: newTodoText}), //Send the task in the request body\n      });\n\n      if (response.ok) {\n        const addedTodo = await response.json();\n        console.log(addedTodo);\n        setTodos([...todos, { ...addedTodo, id: addedTodo._id.$oid }]); // Add the new todo with formatted ID to the state\n      } else {\n        throw new Error('Network response was not ok'); //Handle http errors\n      }\n    } catch (error) {\n      console.log(error); //Handle network errors\n\n  }\n  };\n\n  const editTodo = (id, doneStatus) => {\n    //log current todos to inspect them\n    console.log('Current todos:', todos);\n    //find todo item by id\n    const todo = todos.find((item) => item.id === id);\n    if (!todo) {\n      console.log('Todo item not found');\n      return;\n    }\n\n    //Toggle the 'done' status\n    const updatedTodo = {...todo, done: !todo.done };\n\n    //send the updated todo item to the server\n    fetch(`http://localhost:3001/update/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(updatedTodo),\n    })\n    .then(response => {\n      if(!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then(updatedItem => {\n      // Update the state with the new todo list\n      setTodos(todos.map((item) => item.id === id ? updatedItem : item));\n    })\n    .catch(err => console.log(err));\n  };\n\n  //Handle delete logic\n  const deleteTodo = async (id) => {\n    try {\n      const response = await fetch(`http://localhost:3001/delete/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (response.ok) {\n        setTodos(todos.filter((todo) => todo.id !== id)); // Remove the todo from the state\n      } else {\n        throw new Error('Network response was not ok');\n      }\n    } catch (error) {\n      console.error(error); // Handle network errors\n    }\n  };\n\n  return (\n    <div>\n      <TodoForm onAddTodo={addTodo} />\n      <TodoList todos={todos} onEditTodo={editTodo} onDeleteTodo={deleteTodo} />\n    </div>\n  );\n}\n\nexport default TodoApp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}