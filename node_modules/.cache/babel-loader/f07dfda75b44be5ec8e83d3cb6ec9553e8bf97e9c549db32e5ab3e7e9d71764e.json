{"ast":null,"code":"var _jsxFileName = \"/Users/giovannygarcia/my-project/solo/src/components/layout/Navbar.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport logo from '../../peach.png';\nimport TodoForm from '../Todo/TodoForm.js';\nimport { CircleFill, TrashFill } from 'react-bootstrap-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Navbar() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3001/get').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => setTodos(data)).catch(err => console.log(err));\n  }, []);\n  console.log(todos);\n  const handleEdit = id => {\n    fetch(`http://localhost:3001/update/${id}`, {\n      method: 'PUT',\n      headers: {\n        'COntent-type': 'application/json'\n      },\n      body: JSON.stringify({\n        task: newTaskValue\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => setTodos(data)).catch(err => console.log(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"Navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"What I gotta do.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), todos.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Nothing Planned Yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this) : todos.map(todo =>\n    /*#__PURE__*/\n    // Assuming each todo has a unique id\n    _jsxDEV(\"div\", {\n      className: \"task\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox\",\n        onClick: () => handleEdit(todo._id),\n        children: [/*#__PURE__*/_jsxDEV(CircleFill, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: todo.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(TrashFill, {\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Navbar, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["useEffect","useState","logo","TodoForm","CircleFill","TrashFill","jsxDEV","_jsxDEV","Navbar","_s","todos","setTodos","fetch","then","response","ok","Error","json","data","catch","err","console","log","handleEdit","id","method","headers","body","JSON","stringify","task","newTaskValue","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","length","map","todo","onClick","_id","_c","$RefreshReg$"],"sources":["/Users/giovannygarcia/my-project/solo/src/components/layout/Navbar.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport logo from '../../peach.png';\nimport TodoForm from '../Todo/TodoForm.js'\nimport { CircleFill, TrashFill } from 'react-bootstrap-icons';\n\nfunction Navbar() {\n    const [todos, setTodos] = useState([])\n    useEffect(() => {\n        fetch('http://localhost:3001/get')\n          .then(response => {\n            if(!response.ok) {\n              throw new Error('Network response was not ok');\n            }\n            return response.json();\n          })\n          .then(data => setTodos(data))\n          .catch(err => console.log(err));\n    }, [])\n\n    console.log(todos);\n\n    const handleEdit = (id) => {\n      fetch(`http://localhost:3001/update/${id}`, {\n        method: 'PUT',\n        headers: {\n          'COntent-type': 'application/json',\n        },\n        body: JSON.stringify({task: newTaskValue }),\n      })\n      .then(response => {\n        if(!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => setTodos(data))\n      .catch(err => console.log(err));\n\n    }\n\n  return (\n    <nav className=\"Navbar\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <h1>What I gotta do.</h1>\n      <TodoForm/>\n      {\n  todos.length === 0\n    ? <div><h2>Nothing Planned Yet</h2></div>\n    : todos.map(todo => ( // Assuming each todo has a unique id\n        <div className='task' key={todo.id}> {/* Use todo.id instead of index for key */}\n          <div className='checkbox' onClick={() => handleEdit(todo._id)}>\n            <CircleFill className='icon' />\n            <p>{todo.task}</p>\n          </div>\n          <div>\n            <span /*onClick={() => handleDelete(todo.id)}*/><TrashFill className='icon'/></span>\n          </div>\n        </div>\n      ))\n}\n\n    </nav>\n  );\n}\n\nexport default Navbar;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,SAASC,UAAU,EAAEC,SAAS,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtCD,SAAS,CAAC,MAAM;IACZY,KAAK,CAAC,2BAA2B,CAAC,CAC/BC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAG,CAACA,QAAQ,CAACC,EAAE,EAAE;QACf,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAIP,QAAQ,CAACO,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAENC,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;EAElB,MAAMa,UAAU,GAAIC,EAAE,IAAK;IACzBZ,KAAK,CAAE,gCAA+BY,EAAG,EAAC,EAAE;MAC1CC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACC,IAAI,EAAEC;MAAa,CAAC;IAC5C,CAAC,CAAC,CACDlB,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAG,CAACA,QAAQ,CAACC,EAAE,EAAE;QACf,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAIP,QAAQ,CAACO,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EAEjC,CAAC;EAEH,oBACEb,OAAA;IAAKyB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrB1B,OAAA;MAAK2B,GAAG,EAAEhC,IAAK;MAAC8B,SAAS,EAAC,UAAU;MAACG,GAAG,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClDhC,OAAA;MAAA0B,QAAA,EAAI;IAAgB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBhC,OAAA,CAACJ,QAAQ;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EAEf7B,KAAK,CAAC8B,MAAM,KAAK,CAAC,gBACdjC,OAAA;MAAA0B,QAAA,eAAK1B,OAAA;QAAA0B,QAAA,EAAI;MAAmB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,GACvC7B,KAAK,CAAC+B,GAAG,CAACC,IAAI;IAAA;IAAM;IAClBnC,OAAA;MAAKyB,SAAS,EAAC,MAAM;MAAAC,QAAA,GAAe,GAAC,eACnC1B,OAAA;QAAKyB,SAAS,EAAC,UAAU;QAACW,OAAO,EAAEA,CAAA,KAAMpB,UAAU,CAACmB,IAAI,CAACE,GAAG,CAAE;QAAAX,QAAA,gBAC5D1B,OAAA,CAACH,UAAU;UAAC4B,SAAS,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/BhC,OAAA;UAAA0B,QAAA,EAAIS,IAAI,CAACZ;QAAI;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,eACNhC,OAAA;QAAA0B,QAAA,eACE1B,OAAA;UAAA0B,QAAA,eAAgD1B,OAAA,CAACF,SAAS;YAAC2B,SAAS,EAAC;UAAM;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjF,CAAC;IAAA,GAPmBG,IAAI,CAAClB,EAAE;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQ7B,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGC,CAAC;AAEV;AAAC9B,EAAA,CA1DQD,MAAM;AAAAqC,EAAA,GAANrC,MAAM;AA4Df,eAAeA,MAAM;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}